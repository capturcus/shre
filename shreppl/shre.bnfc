ProgramRoot. Program ::= [Function] ;

separator Function ";" ;

separator nonempty Ident "";

rules Function ::= Ident [FuncArgDecl] "->" Type ":;" [LetIn] | Ident [FuncArgDecl] ":;" [LetIn] ;
separator nonempty FuncArgDecl "";
rules FuncArgDecl ::= Ident | Ident ":" Type ;
rules Type ::= Ident | Type Ident ;

rules StructSelector ::= Ident | StructSelector "." Ident ;

rules PackageQualifier ::= 
     "\\"
    | PackageQualifier Ident "\\" ;

rules Selector ::= PackageQualifier StructSelector | StructSelector ;

separator LetIn ";" ;

rules LetIn ::= 
      Selector "=" Expr
    | Expr ;

ExprInt. Expr ::= Integer ;
ExprDouble. Expr ::= Double ;
ExprString. Expr ::= String ;
ExprFuncCall. Expr ::= FuncCall ;
ExprParen. Expr ::= "(" Expr ")" ;
ExprPipe. Expr ::= Expr "|" Expr ;

rules FuncCall ::= 
     Selector FuncCallArgList "#" 
    | Selector FuncCallArgList 
    | Selector "#"
    | Selector ;
FuncCallArgListContinue. FuncCallArgList ::= Expr FuncCallArgList ;
FuncCallArgListExpr. FuncCallArgList ::= Expr ;
